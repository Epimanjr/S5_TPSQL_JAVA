/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphique;

import base.BaseInformation;
import base.BaseSetting;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author blaise
 */
public class Panel extends javax.swing.JPanel {

    /**
     * Creates new form Panel
     */
    public Panel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nomBase = new javax.swing.JTextField();
        boutonTestConnexion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        requeteSQl = new javax.swing.JTextField();

        boutonTestConnexion.setText("Tester la connexion");
        boutonTestConnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonTestConnexionActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        requeteSQl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requeteSQlActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(nomBase, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boutonTestConnexion)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(requeteSQl, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boutonTestConnexion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(requeteSQl, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void boutonTestConnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonTestConnexionActionPerformed
        // TODO add your handling code here:

        // Récupération du nom de la base
        // Création de l'objet BaseInformation
        BaseInformation bi = new BaseInformation("mysql", "com.mysql.jdbc.Driver", nomBase.getText(), "root", "", "//localhost");

        BaseSetting bs = new BaseSetting(bi);

        if (BaseSetting.getInstante().testerConnexion()) {
            JOptionPane.showMessageDialog(null, "Connexion OK", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_boutonTestConnexionActionPerformed

    private void requeteSQlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requeteSQlActionPerformed
        // TODO add your handling code here:

        // Requête SQL
        BaseSetting.getInstante().select(requeteSQl.getText());

        try {
            // Récupération du nombre de lignes + colonnes
            BaseSetting.getInstante().getResult_set().last();
            int nombreLignes = BaseSetting.getInstante().getResult_set().getRow();
            BaseSetting.getInstante().getResult_set().beforeFirst();
            int nombreColonnes = BaseSetting.getInstante().getResult_set().getMetaData().getColumnCount();

            // Récupération de l'en-tête
            String[] noms = new String[nombreColonnes];
            for (int i = 0; i < noms.length; i++) {
                noms[i] = BaseSetting.getInstante().getResult_set().getMetaData().getColumnName(i + 1);
                System.out.println(BaseSetting.getInstante().getResult_set().getMetaData().getColumnClassName(i + 1));
            }

            // Initialisation tableau
            Object[][] o = new Object[nombreLignes][nombreColonnes];
            int iterateur = 0;

            while (BaseSetting.getInstante().getResult_set().next()) {
                for (int i = 0; i < nombreColonnes; i++) {
                    o[iterateur][i] = BaseSetting.getInstante().getResult_set().getObject(i+1);

                }
                iterateur++;
            }

            // Modification de l'arbre
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    o,
                    noms
            ));
        } catch (SQLException ex) {
            Logger.getLogger(Panel.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_requeteSQlActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boutonTestConnexion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nomBase;
    private javax.swing.JTextField requeteSQl;
    // End of variables declaration//GEN-END:variables
}
